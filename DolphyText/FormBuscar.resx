<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>